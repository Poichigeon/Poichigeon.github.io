{"meta":{"title":"你是无意穿堂风","subtitle":"","description":"","author":"Poichigeon","url":"https://Poichigeon.github.io","root":"/"},"pages":[{"title":"Guestbook","date":"2021-03-07T07:00:00.000Z","updated":"2021-03-10T07:20:47.237Z","comments":true,"path":"guestbook/index.html","permalink":"https://poichigeon.github.io/guestbook/index.html","excerpt":"","text":""},{"title":"Tags","date":"2021-03-10T07:14:49.000Z","updated":"2021-03-10T07:29:20.855Z","comments":false,"path":"tags/index.html","permalink":"https://poichigeon.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"【群晖NAS】qBittorrent的安装与使用","slug":"nas-qbittorrent","date":"2021-03-10T09:14:50.000Z","updated":"2021-03-11T09:09:45.401Z","comments":true,"path":"2021/03/10/nas-qbittorrent/","link":"","permalink":"https://poichigeon.github.io/2021/03/10/nas-qbittorrent/","excerpt":"24小时开机的群晖NAS是一个理想的下载平台，这不赶紧部署一个torrent下载工具。","text":"24小时开机的群晖NAS是一个理想的下载平台，这不赶紧部署一个torrent下载工具。 ¶准备工作 ¶安装Docker qBittorrent是以Docker的形式运行的，因此需要在套件中心安装Docker ¶下载qBittorrent映像 安装完成后打开Docker,在注册表中搜索qbittorrent 我曾经尝试过安装&quot;linuxserver/qbittorrent&quot;，但是遇到了一些问题，后来又尝试安装了&quot;johngong/qbittorrent&quot;，安装完成后能正常运行，因此本文以&quot;johngong/qbittorrent&quot;为例。 双击&quot;johngong/qbittorrent&quot;，等待弹出“选择标签”窗口，选择合适的版本，我的系统是64位，所以我安装了&quot;4.3.3_amd64&quot;这个版本 图形化界面下载docker映像可能速度很慢，可以sh连接NAS，执行以下命令进行下载 123sudo -i[input your password]docker pull johngong&#x2F;qbittorrent:[需要下载的标签] 例如，&quot;4.3.3_amd64&quot;这个版本的下载命令为 1docker pull johngong&#x2F;qbittorrent:4.3.3_amd64 ¶创建文件夹 在映像下载的过程中，可以创建qBittorrent需要用到的文件夹，文件夹的路径可以根据个人喜好创建 本人创建的目录如下 config文件夹用于存放配置文件，downloads文件夹用于存放下载文件。 文件夹创建之后需要进行权限配置，在qbittorrent文件夹上点击右键，选择属性 然后依次执行下图所示操作，修改文件夹权限 ¶配置qBittorrent 准备工作做完之后，就可以进行qBittorrent配置 ¶配置映像 双击下载好的qBittorrent映像 ![qBittorrent映像]](/images/qBittorent_installation/docker_img.png) 点击高级设置 ![高级设置]](/images/qBittorent_installation/qb_setting_1.png) 在第一个签页勾选“启用自动重新启动” ![自动重新启动]](/images/qBittorent_installation/qb_setting_2.png) 在“卷”这个签页，将创建的文件夹配置进去 ![配置卷]](/images/qBittorent_installation/qb_setting_3.png) 在端口签页，按下图所示配置端口，端口可自行决定，后续操作会用到配置的端口 ![端口配置]](/images/qBittorent_installation/qb_setting_4.png) 最后进行环境配置，需要修改的只有WEBUIPORT这项，将其配置为端口配置中的“10000”，有关环境配置的说明可以查阅官方文档 ![环境配置]](/images/qBittorent_installation/qb_setting_5.png) 配置完成后点击应用，然后点击下一步 ![下一步]](/images/qBittorent_installation/qb_setting_6.png) 在此界面查看一遍配置，确认无误后点击应用 ![检查配置]](/images/qBittorent_installation/qb_setting_7.png) 此时在Docker的容器签页可以看到启动后的qBittorrent ![qBittorrent]](/images/qBittorent_installation/docker_qb.png) ¶qBittorrent的一些设置 qBittorrent已经启动，此时我们可以通过刚刚配置的WEBUIPORT访问qBittorrent的管理界面 在浏览器输入[nas的ip]:[WEBUIPORT]即可打开管理界面 ![qBittorrent管理界面]](/images/qBittorent_installation/qb_manage.png) 管理员用户的默认用户名和密码均为admin 登入后点击如下按钮进行设置 ![qBittorrent设置]](/images/qBittorent_installation/qb_setting_8.png) 将下载一栏的默认保存路径配置为我们配置在“卷”中的/downloads ![下载路径配置]](/images/qBittorent_installation/qb_setting_9.png) 将连接一栏的端口配置为之前配置好的“50040” ![端口配置]]](/images/qBittorent_installation/qb_setting_10.png) 至此，配置已经基本完成，可以通过qBittorrent进行下载了 ¶常见问题 ¶下载速度慢 原因很多，可能是做种的用户不多，也可能是TRACKER对应的资源贫乏，github上有比较热门的trackers list,可以将其中的tracker添加到qBittorrent中 ngosang_trackerslist ¶使用磁力链接下载时一直卡在“下载元数据” 可能是qBittorrent对磁力链接解析力度不够(?) 然后我的操作是把磁力链接用迅雷下载，然后开始下载后点击对应的下载，右键选择下载种子文件，此时可以将torrent下载下来，然后在qBittorrent中使用torrent文件进行下载","categories":[],"tags":[{"name":"群晖NAS","slug":"群晖NAS","permalink":"https://poichigeon.github.io/tags/%E7%BE%A4%E6%99%96NAS/"}]},{"title":"【hexo】指定页面不设置评论功能","slug":"page-without-comments","date":"2021-03-10T07:38:14.000Z","updated":"2021-03-10T07:44:37.919Z","comments":true,"path":"2021/03/10/page-without-comments/","link":"","permalink":"https://poichigeon.github.io/2021/03/10/page-without-comments/","excerpt":"","text":"设置了评论功能之后，在每个页面下方都会有评论模块，如何在指定页面禁用评论功能？ 只需在md文件添加如下代码 1comments: false","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://poichigeon.github.io/tags/hexo/"}]},{"title":"评论功能上线啦！","slug":"comment-published","date":"2021-03-08T07:34:49.000Z","updated":"2021-03-08T07:38:23.972Z","comments":true,"path":"2021/03/08/comment-published/","link":"","permalink":"https://poichigeon.github.io/2021/03/08/comment-published/","excerpt":"","text":"好消息，好消息！ 基于Valine和LeanCloud的评论功能上线啦，欢迎各位大佬畅所欲言！","categories":[],"tags":[]},{"title":"【hexo】deploy时unable to access ...解决(需要代理工具)","slug":"can-not-deploy","date":"2021-03-05T01:47:58.000Z","updated":"2021-03-10T07:19:04.315Z","comments":true,"path":"2021/03/05/can-not-deploy/","link":"","permalink":"https://poichigeon.github.io/2021/03/05/can-not-deploy/","excerpt":"¶情况描述 在deploy时，有时会出现如下报错，由于国内到github的连接不是很稳定，有时需要进行代理才能推送成功。","text":"¶情况描述 在deploy时，有时会出现如下报错，由于国内到github的连接不是很稳定，有时需要进行代理才能推送成功。 ¶解决方案 本人使用v2ray进行代理，可以进入设置找到本地监听端口 记下这个端口，然后进行git配置，输入如下命令 12git config --global http.proxy &#39;socks5:&#x2F;&#x2F;127.0.0.1:10808&#39;git config --global https.proxy &#39;socks5:&#x2F;&#x2F;127.0.0.1:10808&#39; 如果不再需要git走代理，可以执行以下命令取消代理 1git config --global --unset http.proxy &amp;&amp; git config --global --unset https.proxy 配置完成后，打开代理，进行deploy操作，出现如图所示结果即推送成功。","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://poichigeon.github.io/tags/hexo/"},{"name":"git","slug":"git","permalink":"https://poichigeon.github.io/tags/git/"}]},{"title":"【hexo】一个比较诡异的hexo deploy不生效原因","slug":"reason_of_deploy_failure","date":"2021-03-02T02:53:19.000Z","updated":"2021-03-10T07:23:35.758Z","comments":true,"path":"2021/03/02/reason_of_deploy_failure/","link":"","permalink":"https://poichigeon.github.io/2021/03/02/reason_of_deploy_failure/","excerpt":"¶情况描述 在lufer的指导下学习使用Hexo+Github搭建个人博客，在最后一步deploy的时候，出现这种情况，百思不得其解。","text":"¶情况描述 在lufer的指导下学习使用Hexo+Github搭建个人博客，在最后一步deploy的时候，出现这种情况，百思不得其解。 检查了deploy的配置，并没有发现问题，deploy的配置如下，空格数量也都进行了检查。 1234deploy: type: git repo: https:&#x2F;&#x2F;github.com&#x2F;Poichigeon&#x2F;Poichigeon.github.io.git branch: main 下班回家之后，又按照之前的步骤操作了一遍，这次deploy居然意外的成功了！？ 那么问题出在哪呢，掏出神器compare，进行对比，出现如下结果。 用左边的配置替换掉右边的，然后deploy居然就成功了 这就很奇怪了，难道是有什么不可见字符导致deploy不触发吗？ 打开notepad++,使用显示所有字符功能，终于抓到一点蛛丝马迹。 这个空格，竟然不一样！ 突然意识到，之前遇到的另一个报错也很莫名其妙，应该也是这个空格导致的 ¶结论 是配置中空格的问题导致deploy不生效 ¶to be continued 研究一下两种空格是如何区分的","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://poichigeon.github.io/tags/hexo/"}]},{"title":"Hello World","slug":"hello-world","date":"2021-02-25T10:12:38.418Z","updated":"2021-03-04T07:32:24.596Z","comments":true,"path":"2021/02/25/hello-world/","link":"","permalink":"https://poichigeon.github.io/2021/02/25/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. ¶Quick Start ¶Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing ¶Run server 1$ hexo server More info: Server ¶Generate static files 1$ hexo generate More info: Generating ¶Deploy to remote sites 1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"群晖NAS","slug":"群晖NAS","permalink":"https://poichigeon.github.io/tags/%E7%BE%A4%E6%99%96NAS/"},{"name":"hexo","slug":"hexo","permalink":"https://poichigeon.github.io/tags/hexo/"},{"name":"git","slug":"git","permalink":"https://poichigeon.github.io/tags/git/"}]}